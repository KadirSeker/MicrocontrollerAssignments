
AssignmentB2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000007d8  0000084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cce  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a23  00000000  00000000  0000161e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000558  00000000  00000000  00002041  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  0000259c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ba  00000000  00000000  00002668  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001f7  00000000  00000000  00002b22  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002d19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ed       	ldi	r30, 0xD8	; 216
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	66 d0       	rcall	.+204    	; 0x180 <main>
  b4:	8f c3       	rjmp	.+1822   	; 0x7d4 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <lcd_strobe_lcd_e>:
 
#include "lcd.h"

void lcd_strobe_lcd_e(void)
{
	PORTC |= (1<<LCD_E);	// E high
  b8:	ab 9a       	sbi	0x15, 3	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	8f ec       	ldi	r24, 0xCF	; 207
  bc:	97 e0       	ldi	r25, 0x07	; 7
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <lcd_strobe_lcd_e+0x6>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <lcd_strobe_lcd_e+0xc>
  c4:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<LCD_E);  	// E low
  c6:	ab 98       	cbi	0x15, 3	; 21
  c8:	8f ec       	ldi	r24, 0xCF	; 207
  ca:	97 e0       	ldi	r25, 0x07	; 7
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <lcd_strobe_lcd_e+0x14>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <lcd_strobe_lcd_e+0x1a>
  d2:	00 00       	nop
  d4:	08 95       	ret

000000d6 <init_4bits_mode>:
	_delay_ms(1);
}

void init_4bits_mode(void)
{
  d6:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRC = 0xFF;
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
  dc:	15 ba       	out	0x15, r1	; 21

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
  de:	c0 e2       	ldi	r28, 0x20	; 32
  e0:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
  e2:	ea df       	rcall	.-44     	; 0xb8 <lcd_strobe_lcd_e>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
  e4:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
  e6:	e8 df       	rcall	.-48     	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0x80;
  e8:	80 e8       	ldi	r24, 0x80	; 128
  ea:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
  ec:	e5 df       	rcall	.-54     	; 0xb8 <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
  ee:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
  f0:	e3 df       	rcall	.-58     	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0xF0;
  f2:	80 ef       	ldi	r24, 0xF0	; 240
  f4:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
  f6:	e0 df       	rcall	.-64     	; 0xb8 <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
  f8:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
  fa:	de df       	rcall	.-68     	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0x60;
  fc:	80 e6       	ldi	r24, 0x60	; 96
  fe:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 100:	db df       	rcall	.-74     	; 0xb8 <lcd_strobe_lcd_e>
}
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <lcd_write_data>:
		lcd_write_data(*str++);
	}
}

void lcd_write_data(unsigned char byte)
{
 106:	cf 93       	push	r28
 108:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 10a:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 10c:	aa 9a       	sbi	0x15, 2	; 21
	lcd_strobe_lcd_e();
 10e:	d4 df       	rcall	.-88     	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 110:	c2 95       	swap	r28
 112:	c0 7f       	andi	r28, 0xF0	; 240
 114:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
 116:	aa 9a       	sbi	0x15, 2	; 21
	lcd_strobe_lcd_e();
 118:	cf df       	rcall	.-98     	; 0xb8 <lcd_strobe_lcd_e>
}
 11a:	cf 91       	pop	r28
 11c:	08 95       	ret

0000011e <lcd_write_command>:

void lcd_write_command(unsigned char byte)
{
 11e:	cf 93       	push	r28
 120:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 122:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
 124:	aa 98       	cbi	0x15, 2	; 21
	lcd_strobe_lcd_e();
 126:	c8 df       	rcall	.-112    	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 128:	c2 95       	swap	r28
 12a:	c0 7f       	andi	r28, 0xF0	; 240
 12c:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
 12e:	aa 98       	cbi	0x15, 2	; 21
	lcd_strobe_lcd_e();
 130:	c3 df       	rcall	.-122    	; 0xb8 <lcd_strobe_lcd_e>
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <lcd_write_string>:
	PORTC = 0x60;
	lcd_strobe_lcd_e();
}

void lcd_write_string(char *str)
{
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	ec 01       	movw	r28, r24
	lcd_write_command(0x01);
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	ee df       	rcall	.-36     	; 0x11e <lcd_write_command>
	lcd_write_command(0x02);
 142:	82 e0       	ldi	r24, 0x02	; 2
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	eb df       	rcall	.-42     	; 0x11e <lcd_write_command>
	while(*str) 
 148:	88 81       	ld	r24, Y
 14a:	88 23       	and	r24, r24
 14c:	29 f0       	breq	.+10     	; 0x158 <lcd_write_string+0x22>
 14e:	21 96       	adiw	r28, 0x01	; 1
	{
		lcd_write_data(*str++);
 150:	da df       	rcall	.-76     	; 0x106 <lcd_write_data>

void lcd_write_string(char *str)
{
	lcd_write_command(0x01);
	lcd_write_command(0x02);
	while(*str) 
 152:	89 91       	ld	r24, Y+
 154:	81 11       	cpse	r24, r1
 156:	fc cf       	rjmp	.-8      	; 0x150 <lcd_write_string+0x1a>
	{
		lcd_write_data(*str++);
	}
}
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <wait>:
#include <util/delay.h>
#include <avr/interrupt.h>

void wait( int ms )
{
	for (int i=0; i<ms; i++)
 15e:	18 16       	cp	r1, r24
 160:	19 06       	cpc	r1, r25
 162:	6c f4       	brge	.+26     	; 0x17e <wait+0x20>
 164:	20 e0       	ldi	r18, 0x00	; 0
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	ef ec       	ldi	r30, 0xCF	; 207
 16a:	f7 e0       	ldi	r31, 0x07	; 7
 16c:	31 97       	sbiw	r30, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <wait+0xe>
 170:	00 c0       	rjmp	.+0      	; 0x172 <wait+0x14>
 172:	00 00       	nop
 174:	2f 5f       	subi	r18, 0xFF	; 255
 176:	3f 4f       	sbci	r19, 0xFF	; 255
 178:	28 17       	cp	r18, r24
 17a:	39 07       	cpc	r19, r25
 17c:	a9 f7       	brne	.-22     	; 0x168 <wait+0xa>
 17e:	08 95       	ret

00000180 <main>:
	}
}


int main(void)
{
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	cd b7       	in	r28, 0x3d	; 61
 186:	de b7       	in	r29, 0x3e	; 62
 188:	6e 97       	sbiw	r28, 0x1e	; 30
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	f8 94       	cli
 18e:	de bf       	out	0x3e, r29	; 62
 190:	0f be       	out	0x3f, r0	; 63
 192:	cd bf       	out	0x3d, r28	; 61
	int count = 0;
	// Init I/O
	DDRD = 0xF8;			// PORTD(7) output, PORTD(6:0) input
 194:	88 ef       	ldi	r24, 0xF8	; 248
 196:	81 bb       	out	0x11, r24	; 17

	// Init LCD
	init_4bits_mode();
 198:	9e df       	rcall	.-196    	; 0xd6 <init_4bits_mode>
	char s[15];
	sprintf(s, "%d", count);
 19a:	1f 92       	push	r1
 19c:	1f 92       	push	r1
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	8e 01       	movw	r16, r28
 1a8:	0f 5f       	subi	r16, 0xFF	; 255
 1aa:	1f 4f       	sbci	r17, 0xFF	; 255
 1ac:	1f 93       	push	r17
 1ae:	0f 93       	push	r16
 1b0:	48 d0       	rcall	.+144    	; 0x242 <sprintf>
	lcd_write_string(s);
 1b2:	c8 01       	movw	r24, r16
 1b4:	c0 df       	rcall	.-128    	; 0x136 <lcd_write_string>
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
}


int main(void)
{
	int count = 0;
 1c2:	00 e0       	ldi	r16, 0x00	; 0
 1c4:	10 e0       	ldi	r17, 0x00	; 0
		}
		else if(PIND & 4)	//If PD2 is pressed, increment the counter
		{
			count++;
			char str[15];
			sprintf(str, "%d", count);
 1c6:	0f 2e       	mov	r0, r31
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	cf 2e       	mov	r12, r31
 1cc:	f1 e0       	ldi	r31, 0x01	; 1
 1ce:	df 2e       	mov	r13, r31
 1d0:	f0 2d       	mov	r31, r0
 1d2:	7e 01       	movw	r14, r28
 1d4:	80 e1       	ldi	r24, 0x10	; 16
 1d6:	e8 0e       	add	r14, r24
 1d8:	f1 1c       	adc	r15, r1
	lcd_write_string(s);

	// Loop forever
	while (1)
	{
		if(PIND & 1)		//If PD0 is pressed, decrement the counter
 1da:	80 9b       	sbis	0x10, 0	; 16
 1dc:	15 c0       	rjmp	.+42     	; 0x208 <main+0x88>
		{
			count--;
 1de:	01 50       	subi	r16, 0x01	; 1
 1e0:	11 09       	sbc	r17, r1
			char str[15];
			sprintf(str, "%d", count);
 1e2:	1f 93       	push	r17
 1e4:	0f 93       	push	r16
 1e6:	df 92       	push	r13
 1e8:	cf 92       	push	r12
 1ea:	ff 92       	push	r15
 1ec:	ef 92       	push	r14
 1ee:	29 d0       	rcall	.+82     	; 0x242 <sprintf>
			lcd_write_string(str);
 1f0:	c7 01       	movw	r24, r14
 1f2:	a1 df       	rcall	.-190    	; 0x136 <lcd_write_string>
			wait( 250 );
 1f4:	8a ef       	ldi	r24, 0xFA	; 250
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	b2 df       	rcall	.-156    	; 0x15e <wait>
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
 206:	16 c0       	rjmp	.+44     	; 0x234 <main+0xb4>
		}
		else if(PIND & 4)	//If PD2 is pressed, increment the counter
 208:	82 9b       	sbis	0x10, 2	; 16
 20a:	14 c0       	rjmp	.+40     	; 0x234 <main+0xb4>
		{
			count++;
 20c:	0f 5f       	subi	r16, 0xFF	; 255
 20e:	1f 4f       	sbci	r17, 0xFF	; 255
			char str[15];
			sprintf(str, "%d", count);
 210:	1f 93       	push	r17
 212:	0f 93       	push	r16
 214:	df 92       	push	r13
 216:	cf 92       	push	r12
 218:	ff 92       	push	r15
 21a:	ef 92       	push	r14
 21c:	12 d0       	rcall	.+36     	; 0x242 <sprintf>
			lcd_write_string(str);
 21e:	c7 01       	movw	r24, r14
 220:	8a df       	rcall	.-236    	; 0x136 <lcd_write_string>
			wait( 250 );
 222:	8a ef       	ldi	r24, 0xFA	; 250
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	9b df       	rcall	.-202    	; 0x15e <wait>
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
		}
		// Write sample string
		PORTD ^= (1<<7);	// Toggle PORTD.7
 234:	92 b3       	in	r25, 0x12	; 18
 236:	90 58       	subi	r25, 0x80	; 128
 238:	92 bb       	out	0x12, r25	; 18
		wait( 250 );
 23a:	8a ef       	ldi	r24, 0xFA	; 250
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	8f df       	rcall	.-226    	; 0x15e <wait>
	}
 240:	cc cf       	rjmp	.-104    	; 0x1da <main+0x5a>

00000242 <sprintf>:
 242:	0f 93       	push	r16
 244:	1f 93       	push	r17
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
 24a:	cd b7       	in	r28, 0x3d	; 61
 24c:	de b7       	in	r29, 0x3e	; 62
 24e:	2e 97       	sbiw	r28, 0x0e	; 14
 250:	0f b6       	in	r0, 0x3f	; 63
 252:	f8 94       	cli
 254:	de bf       	out	0x3e, r29	; 62
 256:	0f be       	out	0x3f, r0	; 63
 258:	cd bf       	out	0x3d, r28	; 61
 25a:	0d 89       	ldd	r16, Y+21	; 0x15
 25c:	1e 89       	ldd	r17, Y+22	; 0x16
 25e:	86 e0       	ldi	r24, 0x06	; 6
 260:	8c 83       	std	Y+4, r24	; 0x04
 262:	1a 83       	std	Y+2, r17	; 0x02
 264:	09 83       	std	Y+1, r16	; 0x01
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	9f e7       	ldi	r25, 0x7F	; 127
 26a:	9e 83       	std	Y+6, r25	; 0x06
 26c:	8d 83       	std	Y+5, r24	; 0x05
 26e:	ae 01       	movw	r20, r28
 270:	47 5e       	subi	r20, 0xE7	; 231
 272:	5f 4f       	sbci	r21, 0xFF	; 255
 274:	6f 89       	ldd	r22, Y+23	; 0x17
 276:	78 8d       	ldd	r23, Y+24	; 0x18
 278:	ce 01       	movw	r24, r28
 27a:	01 96       	adiw	r24, 0x01	; 1
 27c:	11 d0       	rcall	.+34     	; 0x2a0 <vfprintf>
 27e:	2f 81       	ldd	r18, Y+7	; 0x07
 280:	38 85       	ldd	r19, Y+8	; 0x08
 282:	f8 01       	movw	r30, r16
 284:	e2 0f       	add	r30, r18
 286:	f3 1f       	adc	r31, r19
 288:	10 82       	st	Z, r1
 28a:	2e 96       	adiw	r28, 0x0e	; 14
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	de bf       	out	0x3e, r29	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	cd bf       	out	0x3d, r28	; 61
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	1f 91       	pop	r17
 29c:	0f 91       	pop	r16
 29e:	08 95       	ret

000002a0 <vfprintf>:
 2a0:	2f 92       	push	r2
 2a2:	3f 92       	push	r3
 2a4:	4f 92       	push	r4
 2a6:	5f 92       	push	r5
 2a8:	6f 92       	push	r6
 2aa:	7f 92       	push	r7
 2ac:	8f 92       	push	r8
 2ae:	9f 92       	push	r9
 2b0:	af 92       	push	r10
 2b2:	bf 92       	push	r11
 2b4:	cf 92       	push	r12
 2b6:	df 92       	push	r13
 2b8:	ef 92       	push	r14
 2ba:	ff 92       	push	r15
 2bc:	0f 93       	push	r16
 2be:	1f 93       	push	r17
 2c0:	cf 93       	push	r28
 2c2:	df 93       	push	r29
 2c4:	cd b7       	in	r28, 0x3d	; 61
 2c6:	de b7       	in	r29, 0x3e	; 62
 2c8:	2c 97       	sbiw	r28, 0x0c	; 12
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	f8 94       	cli
 2ce:	de bf       	out	0x3e, r29	; 62
 2d0:	0f be       	out	0x3f, r0	; 63
 2d2:	cd bf       	out	0x3d, r28	; 61
 2d4:	7c 01       	movw	r14, r24
 2d6:	6b 01       	movw	r12, r22
 2d8:	8a 01       	movw	r16, r20
 2da:	fc 01       	movw	r30, r24
 2dc:	17 82       	std	Z+7, r1	; 0x07
 2de:	16 82       	std	Z+6, r1	; 0x06
 2e0:	83 81       	ldd	r24, Z+3	; 0x03
 2e2:	81 ff       	sbrs	r24, 1
 2e4:	b0 c1       	rjmp	.+864    	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 2e6:	ce 01       	movw	r24, r28
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	4c 01       	movw	r8, r24
 2ec:	f7 01       	movw	r30, r14
 2ee:	93 81       	ldd	r25, Z+3	; 0x03
 2f0:	f6 01       	movw	r30, r12
 2f2:	93 fd       	sbrc	r25, 3
 2f4:	85 91       	lpm	r24, Z+
 2f6:	93 ff       	sbrs	r25, 3
 2f8:	81 91       	ld	r24, Z+
 2fa:	6f 01       	movw	r12, r30
 2fc:	88 23       	and	r24, r24
 2fe:	09 f4       	brne	.+2      	; 0x302 <vfprintf+0x62>
 300:	9e c1       	rjmp	.+828    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 302:	85 32       	cpi	r24, 0x25	; 37
 304:	39 f4       	brne	.+14     	; 0x314 <vfprintf+0x74>
 306:	93 fd       	sbrc	r25, 3
 308:	85 91       	lpm	r24, Z+
 30a:	93 ff       	sbrs	r25, 3
 30c:	81 91       	ld	r24, Z+
 30e:	6f 01       	movw	r12, r30
 310:	85 32       	cpi	r24, 0x25	; 37
 312:	21 f4       	brne	.+8      	; 0x31c <vfprintf+0x7c>
 314:	b7 01       	movw	r22, r14
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	c7 d1       	rcall	.+910    	; 0x6a8 <fputc>
 31a:	e8 cf       	rjmp	.-48     	; 0x2ec <vfprintf+0x4c>
 31c:	51 2c       	mov	r5, r1
 31e:	31 2c       	mov	r3, r1
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	20 32       	cpi	r18, 0x20	; 32
 324:	a0 f4       	brcc	.+40     	; 0x34e <vfprintf+0xae>
 326:	8b 32       	cpi	r24, 0x2B	; 43
 328:	69 f0       	breq	.+26     	; 0x344 <vfprintf+0xa4>
 32a:	30 f4       	brcc	.+12     	; 0x338 <vfprintf+0x98>
 32c:	80 32       	cpi	r24, 0x20	; 32
 32e:	59 f0       	breq	.+22     	; 0x346 <vfprintf+0xa6>
 330:	83 32       	cpi	r24, 0x23	; 35
 332:	69 f4       	brne	.+26     	; 0x34e <vfprintf+0xae>
 334:	20 61       	ori	r18, 0x10	; 16
 336:	2c c0       	rjmp	.+88     	; 0x390 <vfprintf+0xf0>
 338:	8d 32       	cpi	r24, 0x2D	; 45
 33a:	39 f0       	breq	.+14     	; 0x34a <vfprintf+0xaa>
 33c:	80 33       	cpi	r24, 0x30	; 48
 33e:	39 f4       	brne	.+14     	; 0x34e <vfprintf+0xae>
 340:	21 60       	ori	r18, 0x01	; 1
 342:	26 c0       	rjmp	.+76     	; 0x390 <vfprintf+0xf0>
 344:	22 60       	ori	r18, 0x02	; 2
 346:	24 60       	ori	r18, 0x04	; 4
 348:	23 c0       	rjmp	.+70     	; 0x390 <vfprintf+0xf0>
 34a:	28 60       	ori	r18, 0x08	; 8
 34c:	21 c0       	rjmp	.+66     	; 0x390 <vfprintf+0xf0>
 34e:	27 fd       	sbrc	r18, 7
 350:	27 c0       	rjmp	.+78     	; 0x3a0 <vfprintf+0x100>
 352:	30 ed       	ldi	r19, 0xD0	; 208
 354:	38 0f       	add	r19, r24
 356:	3a 30       	cpi	r19, 0x0A	; 10
 358:	78 f4       	brcc	.+30     	; 0x378 <vfprintf+0xd8>
 35a:	26 ff       	sbrs	r18, 6
 35c:	06 c0       	rjmp	.+12     	; 0x36a <vfprintf+0xca>
 35e:	fa e0       	ldi	r31, 0x0A	; 10
 360:	5f 9e       	mul	r5, r31
 362:	30 0d       	add	r19, r0
 364:	11 24       	eor	r1, r1
 366:	53 2e       	mov	r5, r19
 368:	13 c0       	rjmp	.+38     	; 0x390 <vfprintf+0xf0>
 36a:	8a e0       	ldi	r24, 0x0A	; 10
 36c:	38 9e       	mul	r3, r24
 36e:	30 0d       	add	r19, r0
 370:	11 24       	eor	r1, r1
 372:	33 2e       	mov	r3, r19
 374:	20 62       	ori	r18, 0x20	; 32
 376:	0c c0       	rjmp	.+24     	; 0x390 <vfprintf+0xf0>
 378:	8e 32       	cpi	r24, 0x2E	; 46
 37a:	21 f4       	brne	.+8      	; 0x384 <vfprintf+0xe4>
 37c:	26 fd       	sbrc	r18, 6
 37e:	5f c1       	rjmp	.+702    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 380:	20 64       	ori	r18, 0x40	; 64
 382:	06 c0       	rjmp	.+12     	; 0x390 <vfprintf+0xf0>
 384:	8c 36       	cpi	r24, 0x6C	; 108
 386:	11 f4       	brne	.+4      	; 0x38c <vfprintf+0xec>
 388:	20 68       	ori	r18, 0x80	; 128
 38a:	02 c0       	rjmp	.+4      	; 0x390 <vfprintf+0xf0>
 38c:	88 36       	cpi	r24, 0x68	; 104
 38e:	41 f4       	brne	.+16     	; 0x3a0 <vfprintf+0x100>
 390:	f6 01       	movw	r30, r12
 392:	93 fd       	sbrc	r25, 3
 394:	85 91       	lpm	r24, Z+
 396:	93 ff       	sbrs	r25, 3
 398:	81 91       	ld	r24, Z+
 39a:	6f 01       	movw	r12, r30
 39c:	81 11       	cpse	r24, r1
 39e:	c1 cf       	rjmp	.-126    	; 0x322 <vfprintf+0x82>
 3a0:	98 2f       	mov	r25, r24
 3a2:	9f 7d       	andi	r25, 0xDF	; 223
 3a4:	95 54       	subi	r25, 0x45	; 69
 3a6:	93 30       	cpi	r25, 0x03	; 3
 3a8:	28 f4       	brcc	.+10     	; 0x3b4 <vfprintf+0x114>
 3aa:	0c 5f       	subi	r16, 0xFC	; 252
 3ac:	1f 4f       	sbci	r17, 0xFF	; 255
 3ae:	ff e3       	ldi	r31, 0x3F	; 63
 3b0:	f9 83       	std	Y+1, r31	; 0x01
 3b2:	0d c0       	rjmp	.+26     	; 0x3ce <vfprintf+0x12e>
 3b4:	83 36       	cpi	r24, 0x63	; 99
 3b6:	31 f0       	breq	.+12     	; 0x3c4 <vfprintf+0x124>
 3b8:	83 37       	cpi	r24, 0x73	; 115
 3ba:	71 f0       	breq	.+28     	; 0x3d8 <vfprintf+0x138>
 3bc:	83 35       	cpi	r24, 0x53	; 83
 3be:	09 f0       	breq	.+2      	; 0x3c2 <vfprintf+0x122>
 3c0:	57 c0       	rjmp	.+174    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 3c2:	21 c0       	rjmp	.+66     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3c4:	f8 01       	movw	r30, r16
 3c6:	80 81       	ld	r24, Z
 3c8:	89 83       	std	Y+1, r24	; 0x01
 3ca:	0e 5f       	subi	r16, 0xFE	; 254
 3cc:	1f 4f       	sbci	r17, 0xFF	; 255
 3ce:	44 24       	eor	r4, r4
 3d0:	43 94       	inc	r4
 3d2:	51 2c       	mov	r5, r1
 3d4:	54 01       	movw	r10, r8
 3d6:	14 c0       	rjmp	.+40     	; 0x400 <__LOCK_REGION_LENGTH__>
 3d8:	38 01       	movw	r6, r16
 3da:	f2 e0       	ldi	r31, 0x02	; 2
 3dc:	6f 0e       	add	r6, r31
 3de:	71 1c       	adc	r7, r1
 3e0:	f8 01       	movw	r30, r16
 3e2:	a0 80       	ld	r10, Z
 3e4:	b1 80       	ldd	r11, Z+1	; 0x01
 3e6:	26 ff       	sbrs	r18, 6
 3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <vfprintf+0x150>
 3ea:	65 2d       	mov	r22, r5
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <vfprintf+0x154>
 3f0:	6f ef       	ldi	r22, 0xFF	; 255
 3f2:	7f ef       	ldi	r23, 0xFF	; 255
 3f4:	c5 01       	movw	r24, r10
 3f6:	2c 87       	std	Y+12, r18	; 0x0c
 3f8:	4c d1       	rcall	.+664    	; 0x692 <strnlen>
 3fa:	2c 01       	movw	r4, r24
 3fc:	83 01       	movw	r16, r6
 3fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 400:	2f 77       	andi	r18, 0x7F	; 127
 402:	22 2e       	mov	r2, r18
 404:	16 c0       	rjmp	.+44     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 406:	38 01       	movw	r6, r16
 408:	f2 e0       	ldi	r31, 0x02	; 2
 40a:	6f 0e       	add	r6, r31
 40c:	71 1c       	adc	r7, r1
 40e:	f8 01       	movw	r30, r16
 410:	a0 80       	ld	r10, Z
 412:	b1 80       	ldd	r11, Z+1	; 0x01
 414:	26 ff       	sbrs	r18, 6
 416:	03 c0       	rjmp	.+6      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 418:	65 2d       	mov	r22, r5
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41e:	6f ef       	ldi	r22, 0xFF	; 255
 420:	7f ef       	ldi	r23, 0xFF	; 255
 422:	c5 01       	movw	r24, r10
 424:	2c 87       	std	Y+12, r18	; 0x0c
 426:	2a d1       	rcall	.+596    	; 0x67c <strnlen_P>
 428:	2c 01       	movw	r4, r24
 42a:	2c 85       	ldd	r18, Y+12	; 0x0c
 42c:	20 68       	ori	r18, 0x80	; 128
 42e:	22 2e       	mov	r2, r18
 430:	83 01       	movw	r16, r6
 432:	23 fc       	sbrc	r2, 3
 434:	19 c0       	rjmp	.+50     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 436:	83 2d       	mov	r24, r3
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	48 16       	cp	r4, r24
 43c:	59 06       	cpc	r5, r25
 43e:	a0 f4       	brcc	.+40     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 440:	b7 01       	movw	r22, r14
 442:	80 e2       	ldi	r24, 0x20	; 32
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	30 d1       	rcall	.+608    	; 0x6a8 <fputc>
 448:	3a 94       	dec	r3
 44a:	f5 cf       	rjmp	.-22     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 44c:	f5 01       	movw	r30, r10
 44e:	27 fc       	sbrc	r2, 7
 450:	85 91       	lpm	r24, Z+
 452:	27 fe       	sbrs	r2, 7
 454:	81 91       	ld	r24, Z+
 456:	5f 01       	movw	r10, r30
 458:	b7 01       	movw	r22, r14
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	25 d1       	rcall	.+586    	; 0x6a8 <fputc>
 45e:	31 10       	cpse	r3, r1
 460:	3a 94       	dec	r3
 462:	f1 e0       	ldi	r31, 0x01	; 1
 464:	4f 1a       	sub	r4, r31
 466:	51 08       	sbc	r5, r1
 468:	41 14       	cp	r4, r1
 46a:	51 04       	cpc	r5, r1
 46c:	79 f7       	brne	.-34     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 46e:	de c0       	rjmp	.+444    	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 470:	84 36       	cpi	r24, 0x64	; 100
 472:	11 f0       	breq	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	89 36       	cpi	r24, 0x69	; 105
 476:	31 f5       	brne	.+76     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 478:	f8 01       	movw	r30, r16
 47a:	27 ff       	sbrs	r18, 7
 47c:	07 c0       	rjmp	.+14     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 47e:	60 81       	ld	r22, Z
 480:	71 81       	ldd	r23, Z+1	; 0x01
 482:	82 81       	ldd	r24, Z+2	; 0x02
 484:	93 81       	ldd	r25, Z+3	; 0x03
 486:	0c 5f       	subi	r16, 0xFC	; 252
 488:	1f 4f       	sbci	r17, 0xFF	; 255
 48a:	08 c0       	rjmp	.+16     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 48c:	60 81       	ld	r22, Z
 48e:	71 81       	ldd	r23, Z+1	; 0x01
 490:	07 2e       	mov	r0, r23
 492:	00 0c       	add	r0, r0
 494:	88 0b       	sbc	r24, r24
 496:	99 0b       	sbc	r25, r25
 498:	0e 5f       	subi	r16, 0xFE	; 254
 49a:	1f 4f       	sbci	r17, 0xFF	; 255
 49c:	2f 76       	andi	r18, 0x6F	; 111
 49e:	72 2e       	mov	r7, r18
 4a0:	97 ff       	sbrs	r25, 7
 4a2:	09 c0       	rjmp	.+18     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4a4:	90 95       	com	r25
 4a6:	80 95       	com	r24
 4a8:	70 95       	com	r23
 4aa:	61 95       	neg	r22
 4ac:	7f 4f       	sbci	r23, 0xFF	; 255
 4ae:	8f 4f       	sbci	r24, 0xFF	; 255
 4b0:	9f 4f       	sbci	r25, 0xFF	; 255
 4b2:	20 68       	ori	r18, 0x80	; 128
 4b4:	72 2e       	mov	r7, r18
 4b6:	2a e0       	ldi	r18, 0x0A	; 10
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	a4 01       	movw	r20, r8
 4bc:	2d d1       	rcall	.+602    	; 0x718 <__ultoa_invert>
 4be:	a8 2e       	mov	r10, r24
 4c0:	a8 18       	sub	r10, r8
 4c2:	43 c0       	rjmp	.+134    	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 4c4:	85 37       	cpi	r24, 0x75	; 117
 4c6:	29 f4       	brne	.+10     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4c8:	2f 7e       	andi	r18, 0xEF	; 239
 4ca:	b2 2e       	mov	r11, r18
 4cc:	2a e0       	ldi	r18, 0x0A	; 10
 4ce:	30 e0       	ldi	r19, 0x00	; 0
 4d0:	25 c0       	rjmp	.+74     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 4d2:	f2 2f       	mov	r31, r18
 4d4:	f9 7f       	andi	r31, 0xF9	; 249
 4d6:	bf 2e       	mov	r11, r31
 4d8:	8f 36       	cpi	r24, 0x6F	; 111
 4da:	c1 f0       	breq	.+48     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4dc:	18 f4       	brcc	.+6      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4de:	88 35       	cpi	r24, 0x58	; 88
 4e0:	79 f0       	breq	.+30     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4e2:	ad c0       	rjmp	.+346    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 4e4:	80 37       	cpi	r24, 0x70	; 112
 4e6:	19 f0       	breq	.+6      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e8:	88 37       	cpi	r24, 0x78	; 120
 4ea:	21 f0       	breq	.+8      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4ec:	a8 c0       	rjmp	.+336    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 4ee:	2f 2f       	mov	r18, r31
 4f0:	20 61       	ori	r18, 0x10	; 16
 4f2:	b2 2e       	mov	r11, r18
 4f4:	b4 fe       	sbrs	r11, 4
 4f6:	0d c0       	rjmp	.+26     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 4f8:	8b 2d       	mov	r24, r11
 4fa:	84 60       	ori	r24, 0x04	; 4
 4fc:	b8 2e       	mov	r11, r24
 4fe:	09 c0       	rjmp	.+18     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 500:	24 ff       	sbrs	r18, 4
 502:	0a c0       	rjmp	.+20     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 504:	9f 2f       	mov	r25, r31
 506:	96 60       	ori	r25, 0x06	; 6
 508:	b9 2e       	mov	r11, r25
 50a:	06 c0       	rjmp	.+12     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 50c:	28 e0       	ldi	r18, 0x08	; 8
 50e:	30 e0       	ldi	r19, 0x00	; 0
 510:	05 c0       	rjmp	.+10     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 512:	20 e1       	ldi	r18, 0x10	; 16
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	02 c0       	rjmp	.+4      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 518:	20 e1       	ldi	r18, 0x10	; 16
 51a:	32 e0       	ldi	r19, 0x02	; 2
 51c:	f8 01       	movw	r30, r16
 51e:	b7 fe       	sbrs	r11, 7
 520:	07 c0       	rjmp	.+14     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 522:	60 81       	ld	r22, Z
 524:	71 81       	ldd	r23, Z+1	; 0x01
 526:	82 81       	ldd	r24, Z+2	; 0x02
 528:	93 81       	ldd	r25, Z+3	; 0x03
 52a:	0c 5f       	subi	r16, 0xFC	; 252
 52c:	1f 4f       	sbci	r17, 0xFF	; 255
 52e:	06 c0       	rjmp	.+12     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 530:	60 81       	ld	r22, Z
 532:	71 81       	ldd	r23, Z+1	; 0x01
 534:	80 e0       	ldi	r24, 0x00	; 0
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	0e 5f       	subi	r16, 0xFE	; 254
 53a:	1f 4f       	sbci	r17, 0xFF	; 255
 53c:	a4 01       	movw	r20, r8
 53e:	ec d0       	rcall	.+472    	; 0x718 <__ultoa_invert>
 540:	a8 2e       	mov	r10, r24
 542:	a8 18       	sub	r10, r8
 544:	fb 2d       	mov	r31, r11
 546:	ff 77       	andi	r31, 0x7F	; 127
 548:	7f 2e       	mov	r7, r31
 54a:	76 fe       	sbrs	r7, 6
 54c:	0b c0       	rjmp	.+22     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 54e:	37 2d       	mov	r19, r7
 550:	3e 7f       	andi	r19, 0xFE	; 254
 552:	a5 14       	cp	r10, r5
 554:	50 f4       	brcc	.+20     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 556:	74 fe       	sbrs	r7, 4
 558:	0a c0       	rjmp	.+20     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 55a:	72 fc       	sbrc	r7, 2
 55c:	08 c0       	rjmp	.+16     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 55e:	37 2d       	mov	r19, r7
 560:	3e 7e       	andi	r19, 0xEE	; 238
 562:	05 c0       	rjmp	.+10     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 564:	ba 2c       	mov	r11, r10
 566:	37 2d       	mov	r19, r7
 568:	03 c0       	rjmp	.+6      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56a:	ba 2c       	mov	r11, r10
 56c:	01 c0       	rjmp	.+2      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56e:	b5 2c       	mov	r11, r5
 570:	34 ff       	sbrs	r19, 4
 572:	0d c0       	rjmp	.+26     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 574:	fe 01       	movw	r30, r28
 576:	ea 0d       	add	r30, r10
 578:	f1 1d       	adc	r31, r1
 57a:	80 81       	ld	r24, Z
 57c:	80 33       	cpi	r24, 0x30	; 48
 57e:	11 f4       	brne	.+4      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 580:	39 7e       	andi	r19, 0xE9	; 233
 582:	09 c0       	rjmp	.+18     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 584:	32 ff       	sbrs	r19, 2
 586:	06 c0       	rjmp	.+12     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 588:	b3 94       	inc	r11
 58a:	b3 94       	inc	r11
 58c:	04 c0       	rjmp	.+8      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 58e:	83 2f       	mov	r24, r19
 590:	86 78       	andi	r24, 0x86	; 134
 592:	09 f0       	breq	.+2      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 594:	b3 94       	inc	r11
 596:	33 fd       	sbrc	r19, 3
 598:	12 c0       	rjmp	.+36     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 59a:	30 ff       	sbrs	r19, 0
 59c:	06 c0       	rjmp	.+12     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 59e:	5a 2c       	mov	r5, r10
 5a0:	b3 14       	cp	r11, r3
 5a2:	18 f4       	brcc	.+6      	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5a4:	53 0c       	add	r5, r3
 5a6:	5b 18       	sub	r5, r11
 5a8:	b3 2c       	mov	r11, r3
 5aa:	b3 14       	cp	r11, r3
 5ac:	60 f4       	brcc	.+24     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ae:	b7 01       	movw	r22, r14
 5b0:	80 e2       	ldi	r24, 0x20	; 32
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	3c 87       	std	Y+12, r19	; 0x0c
 5b6:	78 d0       	rcall	.+240    	; 0x6a8 <fputc>
 5b8:	b3 94       	inc	r11
 5ba:	3c 85       	ldd	r19, Y+12	; 0x0c
 5bc:	f6 cf       	rjmp	.-20     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5be:	b3 14       	cp	r11, r3
 5c0:	10 f4       	brcc	.+4      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c2:	3b 18       	sub	r3, r11
 5c4:	01 c0       	rjmp	.+2      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c6:	31 2c       	mov	r3, r1
 5c8:	34 ff       	sbrs	r19, 4
 5ca:	11 c0       	rjmp	.+34     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5cc:	b7 01       	movw	r22, r14
 5ce:	80 e3       	ldi	r24, 0x30	; 48
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	3c 87       	std	Y+12, r19	; 0x0c
 5d4:	69 d0       	rcall	.+210    	; 0x6a8 <fputc>
 5d6:	3c 85       	ldd	r19, Y+12	; 0x0c
 5d8:	32 ff       	sbrs	r19, 2
 5da:	16 c0       	rjmp	.+44     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5dc:	31 fd       	sbrc	r19, 1
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e0:	88 e7       	ldi	r24, 0x78	; 120
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e6:	88 e5       	ldi	r24, 0x58	; 88
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	b7 01       	movw	r22, r14
 5ec:	0c c0       	rjmp	.+24     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5ee:	83 2f       	mov	r24, r19
 5f0:	86 78       	andi	r24, 0x86	; 134
 5f2:	51 f0       	breq	.+20     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5f4:	31 ff       	sbrs	r19, 1
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f8:	8b e2       	ldi	r24, 0x2B	; 43
 5fa:	01 c0       	rjmp	.+2      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5fc:	80 e2       	ldi	r24, 0x20	; 32
 5fe:	37 fd       	sbrc	r19, 7
 600:	8d e2       	ldi	r24, 0x2D	; 45
 602:	b7 01       	movw	r22, r14
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	50 d0       	rcall	.+160    	; 0x6a8 <fputc>
 608:	a5 14       	cp	r10, r5
 60a:	30 f4       	brcc	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60c:	b7 01       	movw	r22, r14
 60e:	80 e3       	ldi	r24, 0x30	; 48
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	4a d0       	rcall	.+148    	; 0x6a8 <fputc>
 614:	5a 94       	dec	r5
 616:	f8 cf       	rjmp	.-16     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 618:	aa 94       	dec	r10
 61a:	f4 01       	movw	r30, r8
 61c:	ea 0d       	add	r30, r10
 61e:	f1 1d       	adc	r31, r1
 620:	80 81       	ld	r24, Z
 622:	b7 01       	movw	r22, r14
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	40 d0       	rcall	.+128    	; 0x6a8 <fputc>
 628:	a1 10       	cpse	r10, r1
 62a:	f6 cf       	rjmp	.-20     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 62c:	33 20       	and	r3, r3
 62e:	09 f4       	brne	.+2      	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 630:	5d ce       	rjmp	.-838    	; 0x2ec <vfprintf+0x4c>
 632:	b7 01       	movw	r22, r14
 634:	80 e2       	ldi	r24, 0x20	; 32
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	37 d0       	rcall	.+110    	; 0x6a8 <fputc>
 63a:	3a 94       	dec	r3
 63c:	f7 cf       	rjmp	.-18     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 63e:	f7 01       	movw	r30, r14
 640:	86 81       	ldd	r24, Z+6	; 0x06
 642:	97 81       	ldd	r25, Z+7	; 0x07
 644:	02 c0       	rjmp	.+4      	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 646:	8f ef       	ldi	r24, 0xFF	; 255
 648:	9f ef       	ldi	r25, 0xFF	; 255
 64a:	2c 96       	adiw	r28, 0x0c	; 12
 64c:	0f b6       	in	r0, 0x3f	; 63
 64e:	f8 94       	cli
 650:	de bf       	out	0x3e, r29	; 62
 652:	0f be       	out	0x3f, r0	; 63
 654:	cd bf       	out	0x3d, r28	; 61
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	1f 91       	pop	r17
 65c:	0f 91       	pop	r16
 65e:	ff 90       	pop	r15
 660:	ef 90       	pop	r14
 662:	df 90       	pop	r13
 664:	cf 90       	pop	r12
 666:	bf 90       	pop	r11
 668:	af 90       	pop	r10
 66a:	9f 90       	pop	r9
 66c:	8f 90       	pop	r8
 66e:	7f 90       	pop	r7
 670:	6f 90       	pop	r6
 672:	5f 90       	pop	r5
 674:	4f 90       	pop	r4
 676:	3f 90       	pop	r3
 678:	2f 90       	pop	r2
 67a:	08 95       	ret

0000067c <strnlen_P>:
 67c:	fc 01       	movw	r30, r24
 67e:	05 90       	lpm	r0, Z+
 680:	61 50       	subi	r22, 0x01	; 1
 682:	70 40       	sbci	r23, 0x00	; 0
 684:	01 10       	cpse	r0, r1
 686:	d8 f7       	brcc	.-10     	; 0x67e <strnlen_P+0x2>
 688:	80 95       	com	r24
 68a:	90 95       	com	r25
 68c:	8e 0f       	add	r24, r30
 68e:	9f 1f       	adc	r25, r31
 690:	08 95       	ret

00000692 <strnlen>:
 692:	fc 01       	movw	r30, r24
 694:	61 50       	subi	r22, 0x01	; 1
 696:	70 40       	sbci	r23, 0x00	; 0
 698:	01 90       	ld	r0, Z+
 69a:	01 10       	cpse	r0, r1
 69c:	d8 f7       	brcc	.-10     	; 0x694 <strnlen+0x2>
 69e:	80 95       	com	r24
 6a0:	90 95       	com	r25
 6a2:	8e 0f       	add	r24, r30
 6a4:	9f 1f       	adc	r25, r31
 6a6:	08 95       	ret

000006a8 <fputc>:
 6a8:	0f 93       	push	r16
 6aa:	1f 93       	push	r17
 6ac:	cf 93       	push	r28
 6ae:	df 93       	push	r29
 6b0:	fb 01       	movw	r30, r22
 6b2:	23 81       	ldd	r18, Z+3	; 0x03
 6b4:	21 fd       	sbrc	r18, 1
 6b6:	03 c0       	rjmp	.+6      	; 0x6be <fputc+0x16>
 6b8:	8f ef       	ldi	r24, 0xFF	; 255
 6ba:	9f ef       	ldi	r25, 0xFF	; 255
 6bc:	28 c0       	rjmp	.+80     	; 0x70e <fputc+0x66>
 6be:	22 ff       	sbrs	r18, 2
 6c0:	16 c0       	rjmp	.+44     	; 0x6ee <fputc+0x46>
 6c2:	46 81       	ldd	r20, Z+6	; 0x06
 6c4:	57 81       	ldd	r21, Z+7	; 0x07
 6c6:	24 81       	ldd	r18, Z+4	; 0x04
 6c8:	35 81       	ldd	r19, Z+5	; 0x05
 6ca:	42 17       	cp	r20, r18
 6cc:	53 07       	cpc	r21, r19
 6ce:	44 f4       	brge	.+16     	; 0x6e0 <fputc+0x38>
 6d0:	a0 81       	ld	r26, Z
 6d2:	b1 81       	ldd	r27, Z+1	; 0x01
 6d4:	9d 01       	movw	r18, r26
 6d6:	2f 5f       	subi	r18, 0xFF	; 255
 6d8:	3f 4f       	sbci	r19, 0xFF	; 255
 6da:	31 83       	std	Z+1, r19	; 0x01
 6dc:	20 83       	st	Z, r18
 6de:	8c 93       	st	X, r24
 6e0:	26 81       	ldd	r18, Z+6	; 0x06
 6e2:	37 81       	ldd	r19, Z+7	; 0x07
 6e4:	2f 5f       	subi	r18, 0xFF	; 255
 6e6:	3f 4f       	sbci	r19, 0xFF	; 255
 6e8:	37 83       	std	Z+7, r19	; 0x07
 6ea:	26 83       	std	Z+6, r18	; 0x06
 6ec:	10 c0       	rjmp	.+32     	; 0x70e <fputc+0x66>
 6ee:	eb 01       	movw	r28, r22
 6f0:	09 2f       	mov	r16, r25
 6f2:	18 2f       	mov	r17, r24
 6f4:	00 84       	ldd	r0, Z+8	; 0x08
 6f6:	f1 85       	ldd	r31, Z+9	; 0x09
 6f8:	e0 2d       	mov	r30, r0
 6fa:	09 95       	icall
 6fc:	89 2b       	or	r24, r25
 6fe:	e1 f6       	brne	.-72     	; 0x6b8 <fputc+0x10>
 700:	8e 81       	ldd	r24, Y+6	; 0x06
 702:	9f 81       	ldd	r25, Y+7	; 0x07
 704:	01 96       	adiw	r24, 0x01	; 1
 706:	9f 83       	std	Y+7, r25	; 0x07
 708:	8e 83       	std	Y+6, r24	; 0x06
 70a:	81 2f       	mov	r24, r17
 70c:	90 2f       	mov	r25, r16
 70e:	df 91       	pop	r29
 710:	cf 91       	pop	r28
 712:	1f 91       	pop	r17
 714:	0f 91       	pop	r16
 716:	08 95       	ret

00000718 <__ultoa_invert>:
 718:	fa 01       	movw	r30, r20
 71a:	aa 27       	eor	r26, r26
 71c:	28 30       	cpi	r18, 0x08	; 8
 71e:	51 f1       	breq	.+84     	; 0x774 <__ultoa_invert+0x5c>
 720:	20 31       	cpi	r18, 0x10	; 16
 722:	81 f1       	breq	.+96     	; 0x784 <__ultoa_invert+0x6c>
 724:	e8 94       	clt
 726:	6f 93       	push	r22
 728:	6e 7f       	andi	r22, 0xFE	; 254
 72a:	6e 5f       	subi	r22, 0xFE	; 254
 72c:	7f 4f       	sbci	r23, 0xFF	; 255
 72e:	8f 4f       	sbci	r24, 0xFF	; 255
 730:	9f 4f       	sbci	r25, 0xFF	; 255
 732:	af 4f       	sbci	r26, 0xFF	; 255
 734:	b1 e0       	ldi	r27, 0x01	; 1
 736:	3e d0       	rcall	.+124    	; 0x7b4 <__ultoa_invert+0x9c>
 738:	b4 e0       	ldi	r27, 0x04	; 4
 73a:	3c d0       	rcall	.+120    	; 0x7b4 <__ultoa_invert+0x9c>
 73c:	67 0f       	add	r22, r23
 73e:	78 1f       	adc	r23, r24
 740:	89 1f       	adc	r24, r25
 742:	9a 1f       	adc	r25, r26
 744:	a1 1d       	adc	r26, r1
 746:	68 0f       	add	r22, r24
 748:	79 1f       	adc	r23, r25
 74a:	8a 1f       	adc	r24, r26
 74c:	91 1d       	adc	r25, r1
 74e:	a1 1d       	adc	r26, r1
 750:	6a 0f       	add	r22, r26
 752:	71 1d       	adc	r23, r1
 754:	81 1d       	adc	r24, r1
 756:	91 1d       	adc	r25, r1
 758:	a1 1d       	adc	r26, r1
 75a:	20 d0       	rcall	.+64     	; 0x79c <__ultoa_invert+0x84>
 75c:	09 f4       	brne	.+2      	; 0x760 <__ultoa_invert+0x48>
 75e:	68 94       	set
 760:	3f 91       	pop	r19
 762:	2a e0       	ldi	r18, 0x0A	; 10
 764:	26 9f       	mul	r18, r22
 766:	11 24       	eor	r1, r1
 768:	30 19       	sub	r19, r0
 76a:	30 5d       	subi	r19, 0xD0	; 208
 76c:	31 93       	st	Z+, r19
 76e:	de f6       	brtc	.-74     	; 0x726 <__ultoa_invert+0xe>
 770:	cf 01       	movw	r24, r30
 772:	08 95       	ret
 774:	46 2f       	mov	r20, r22
 776:	47 70       	andi	r20, 0x07	; 7
 778:	40 5d       	subi	r20, 0xD0	; 208
 77a:	41 93       	st	Z+, r20
 77c:	b3 e0       	ldi	r27, 0x03	; 3
 77e:	0f d0       	rcall	.+30     	; 0x79e <__ultoa_invert+0x86>
 780:	c9 f7       	brne	.-14     	; 0x774 <__ultoa_invert+0x5c>
 782:	f6 cf       	rjmp	.-20     	; 0x770 <__ultoa_invert+0x58>
 784:	46 2f       	mov	r20, r22
 786:	4f 70       	andi	r20, 0x0F	; 15
 788:	40 5d       	subi	r20, 0xD0	; 208
 78a:	4a 33       	cpi	r20, 0x3A	; 58
 78c:	18 f0       	brcs	.+6      	; 0x794 <__ultoa_invert+0x7c>
 78e:	49 5d       	subi	r20, 0xD9	; 217
 790:	31 fd       	sbrc	r19, 1
 792:	40 52       	subi	r20, 0x20	; 32
 794:	41 93       	st	Z+, r20
 796:	02 d0       	rcall	.+4      	; 0x79c <__ultoa_invert+0x84>
 798:	a9 f7       	brne	.-22     	; 0x784 <__ultoa_invert+0x6c>
 79a:	ea cf       	rjmp	.-44     	; 0x770 <__ultoa_invert+0x58>
 79c:	b4 e0       	ldi	r27, 0x04	; 4
 79e:	a6 95       	lsr	r26
 7a0:	97 95       	ror	r25
 7a2:	87 95       	ror	r24
 7a4:	77 95       	ror	r23
 7a6:	67 95       	ror	r22
 7a8:	ba 95       	dec	r27
 7aa:	c9 f7       	brne	.-14     	; 0x79e <__ultoa_invert+0x86>
 7ac:	00 97       	sbiw	r24, 0x00	; 0
 7ae:	61 05       	cpc	r22, r1
 7b0:	71 05       	cpc	r23, r1
 7b2:	08 95       	ret
 7b4:	9b 01       	movw	r18, r22
 7b6:	ac 01       	movw	r20, r24
 7b8:	0a 2e       	mov	r0, r26
 7ba:	06 94       	lsr	r0
 7bc:	57 95       	ror	r21
 7be:	47 95       	ror	r20
 7c0:	37 95       	ror	r19
 7c2:	27 95       	ror	r18
 7c4:	ba 95       	dec	r27
 7c6:	c9 f7       	brne	.-14     	; 0x7ba <__ultoa_invert+0xa2>
 7c8:	62 0f       	add	r22, r18
 7ca:	73 1f       	adc	r23, r19
 7cc:	84 1f       	adc	r24, r20
 7ce:	95 1f       	adc	r25, r21
 7d0:	a0 1d       	adc	r26, r0
 7d2:	08 95       	ret

000007d4 <_exit>:
 7d4:	f8 94       	cli

000007d6 <__stop_program>:
 7d6:	ff cf       	rjmp	.-2      	; 0x7d6 <__stop_program>
